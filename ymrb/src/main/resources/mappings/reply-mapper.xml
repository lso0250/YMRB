<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--select id값은 유니크 해야하는데, list <이런식으로 같을수가 있다. 이럴때 namespace로 구분한다 -->
<mapper namespace="reply">
	<!--type:"패키지명.클래스명" // board-mapper에서 패키지명.클래스명을 board로 사용한다고 선언해서 이런식으로 
		작성함. -->
	<!-- resultMap은 결과를 매핑하는것이다. 쿼리 결과가 조인구문을 포함할때는 검색 결과를 하나의 자바객체로 매핑할 수 없다. 
		이럴때 매핑해줘야함 -->
	<resultMap type="reply" id="replyResult">
		<id property="reply_num" column="REPLY_NUM" />
		<result property="reply_contents" column="REPLY_CONTENTS" />
		<result property="mem_num" column="MEM_NUM" />
		<result property="mem_nic" column="MEM_NIC" />
		<result property="book_num" column="BOOK_NUM" />
		<result property="reply_date" column="REPLY_DATE" />
	</resultMap>
	<insert id="insertReply">
		<selectKey keyProperty="reply_num" resultType="int" order="BEFORE">
			SELECT NVL(MAX(REPLY_NUM), 0) +1 FROM REPLY
		</selectKey>
		INSERT INTO REPLY(REPLY_NUM
		,REPLY_CONTENTS
		,MEM_NUM
		,BOOK_NUM
		,REPLY_DATE
		)
		VALUES(#{reply_num}
		,#{reply_contents}
		,#{mem_num}
		,#{book_num}
		,SYSDATE		
		)
	</insert>
	
	<update id="updateReply" parameterType="reply">
		UPDATE REPLY
		SET
			REPLY_CONTENTS = #{reply_contents}
		WHERE REPLY_NUM = #{reply_num}
	
	</update>
	
	<delete id="deleteReply">
		<![CDATA[
        	DELETE REPLY
        	WHERE REPLY_NUM = #{reply_num}
        ]]>
	
	</delete>
	
	<select id="getReply" resultType="reply">
		<![CDATA[
		SELECT REPLY_NUM
				,REPLY_CONTENTS
				,M.MEM_NIC
				,TO_CHAR(REPLY_DATE, 'YYYY-MM-DD') AS REPLY_DATE
		FROM REPLY R, MEMBER M
		WHERE REPLY_NUM = #{reply_num}
		AND R.MEM_NUM = M.MEM_NUM
		]]>
	</select>
	
	<select id="getReplyList" resultType="map">
		<![CDATA[
			SELECT REPLY_NUM
			,REPLY_CONTENTS
			,M.MEM_NIC
			,TO_CHAR(REPLY_DATE, 'YYYY-MM-DD') AS REPLY_DATE
			FROM REPLY R, MEMBER M
			WHERE R.MEM_NUM = M.MEM_NUM
			ORDER BY REPLY_NUM DESC
		]]>
	</select>
	
	</mapper>